package com.apica.assignment.backend.service;

import java.util.Queue;
import java.util.concurrent.PriorityBlockingQueue;

import com.apica.assignment.backend.constant.JobStatus;
import com.apica.assignment.backend.dto.JobResponse;
import com.apica.assignment.backend.model.Job;

public interface JobScheduler {
	public void submitJob(Job job);
	public Job fetchNextJob();
	public Queue<Job> getJobQueue();
	
		public void default processJobs() {
			new Thread(() -> {
				while (!jobQueue.isEmpty()) {
					Job job = fetchNextJob();
					if (job != null) {
						job.setStatus(JobStatus.ACTIVE);
						webSocketHandler.broadcastJobStatus(JobResponse.fromJob(job));
						try {
							Thread.sleep(job.getDuration().toMillis());
						} catch (InterruptedException e) {
							Thread.currentThread().interrupt();
						}
						job.setStatus("CLOSED");
						webSocketHandler.broadcastJobStatus(JobResponse.fromJob(job));
					}
				}
			}).start();
		}
	
}
